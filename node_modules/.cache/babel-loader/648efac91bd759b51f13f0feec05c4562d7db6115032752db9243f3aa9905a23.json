{"ast":null,"code":"import React,{createContext,useContext,useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const GameContext=/*#__PURE__*/createContext();export const useGame=()=>useContext(GameContext);export const GameProvider=_ref=>{let{children}=_ref;const[playerTimes,setPlayerTimes]=useState({});const[team,setTeam]=useState([]);const[gameTeam,setGameTeam]=useState([]);// Players selected for the current game\nconst updatePlayerTimes=(name,time)=>{setPlayerTimes(prevTimes=>({...prevTimes,[name]:time}));};const addPlayerToTeam=newPlayer=>{setTeam(prevTeam=>[...prevTeam,newPlayer]);};const removePlayerFromTeam=name=>{setTeam(prevTeam=>prevTeam.filter(player=>player.name!==name));};const value={playerTimes,updatePlayerTimes,team,addPlayerToTeam,removePlayerFromTeam,gameTeam,setGameTeam// Properly use the setter for the current game team\n};return/*#__PURE__*/_jsx(GameContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","jsx","_jsx","GameContext","useGame","GameProvider","_ref","children","playerTimes","setPlayerTimes","team","setTeam","gameTeam","setGameTeam","updatePlayerTimes","name","time","prevTimes","addPlayerToTeam","newPlayer","prevTeam","removePlayerFromTeam","filter","player","value","Provider"],"sources":["/Users/rheashah/Documents/IntraTracker/src/GameContext.js"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\n\nconst GameContext = createContext();\n\nexport const useGame = () => useContext(GameContext);\n\nexport const GameProvider = ({ children }) => {\n  const [playerTimes, setPlayerTimes] = useState({});\n  const [team, setTeam] = useState([]);\n  const [gameTeam, setGameTeam] = useState([]); // Players selected for the current game\n\n  const updatePlayerTimes = (name, time) => {\n    setPlayerTimes(prevTimes => ({\n      ...prevTimes,\n      [name]: time\n    }));\n  };\n\n  const addPlayerToTeam = (newPlayer) => {\n    setTeam(prevTeam => [...prevTeam, newPlayer]);\n  };\n\n  const removePlayerFromTeam = (name) => {\n    setTeam(prevTeam => prevTeam.filter(player => player.name !== name));\n  };\n\n  const value = {\n    playerTimes,\n    updatePlayerTimes,\n    team,\n    addPlayerToTeam,\n    removePlayerFromTeam,\n    gameTeam,\n    setGameTeam, // Properly use the setter for the current game team\n  };\n\n  return <GameContext.Provider value={value}>{children}</GameContext.Provider>;\n};\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEnE,KAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAM,OAAO,CAAGA,CAAA,GAAML,UAAU,CAACI,WAAW,CAAC,CAEpD,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAClD,KAAM,CAACU,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAAE;AAE9C,KAAM,CAAAc,iBAAiB,CAAGA,CAACC,IAAI,CAAEC,IAAI,GAAK,CACxCP,cAAc,CAACQ,SAAS,GAAK,CAC3B,GAAGA,SAAS,CACZ,CAACF,IAAI,EAAGC,IACV,CAAC,CAAC,CAAC,CACL,CAAC,CAED,KAAM,CAAAE,eAAe,CAAIC,SAAS,EAAK,CACrCR,OAAO,CAACS,QAAQ,EAAI,CAAC,GAAGA,QAAQ,CAAED,SAAS,CAAC,CAAC,CAC/C,CAAC,CAED,KAAM,CAAAE,oBAAoB,CAAIN,IAAI,EAAK,CACrCJ,OAAO,CAACS,QAAQ,EAAIA,QAAQ,CAACE,MAAM,CAACC,MAAM,EAAIA,MAAM,CAACR,IAAI,GAAKA,IAAI,CAAC,CAAC,CACtE,CAAC,CAED,KAAM,CAAAS,KAAK,CAAG,CACZhB,WAAW,CACXM,iBAAiB,CACjBJ,IAAI,CACJQ,eAAe,CACfG,oBAAoB,CACpBT,QAAQ,CACRC,WAAa;AACf,CAAC,CAED,mBAAOX,IAAA,CAACC,WAAW,CAACsB,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAjB,QAAA,CAAEA,QAAQ,CAAuB,CAAC,CAC9E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}