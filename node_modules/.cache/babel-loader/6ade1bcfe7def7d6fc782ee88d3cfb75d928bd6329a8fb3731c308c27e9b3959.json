{"ast":null,"code":"import React,{useState,useMemo}from'react';import{useNavigate}from'react-router-dom';import{Button}from'react-bootstrap';import{Bar}from'react-chartjs-2';import{Chart as ChartJS,CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend}from'chart.js';import'./PreviousGames.css';// Register ChartJS components\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(CategoryScale,LinearScale,BarElement,Title,Tooltip,Legend);function PreviousGames(){const navigate=useNavigate();const[savedGames,setSavedGames]=useState(JSON.parse(localStorage.getItem('savedGames'))||[]);const goToHome=()=>{navigate('/');};const formatTime=time=>{const parts=time.split(':');return parts[1]+':'+parts[2];};const handleRemoveGame=index=>{const updatedGames=[...savedGames];updatedGames.splice(index,1);localStorage.setItem('savedGames',JSON.stringify(updatedGames));setSavedGames(updatedGames);// Update the state to reflect the removed game\n};const playerTotals=useMemo(()=>{const totals={};savedGames.forEach(game=>{Object.entries(game.playerTimes).forEach(_ref=>{let[name,time]=_ref;const seconds=parseInt(time.split(':')[1])*60+parseInt(time.split(':')[2]);if(totals[name]){totals[name]+=seconds;}else{totals[name]=seconds;}});});return totals;},[savedGames]);const chartData={labels:Object.keys(playerTotals),datasets:[{label:'Total Time (seconds)',data:Object.values(playerTotals),backgroundColor:'#DA7308'// Orange color from CSS\n}]};const chartOptions={responsive:true,scales:{y:{beginAtZero:true,ticks:{color:'#666'}},x:{ticks:{color:'#666'}}},plugins:{legend:{labels:{color:'#666'}}}};return/*#__PURE__*/_jsxs(\"div\",{className:\"previous-games\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"page-title\",children:\"Previous Games\"}),/*#__PURE__*/_jsx(Bar,{data:chartData,options:chartOptions}),/*#__PURE__*/_jsx(\"div\",{className:\"games-list\",children:savedGames.map((game,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"game-entry\",children:[/*#__PURE__*/_jsx(\"h3\",{children:game.gameName}),/*#__PURE__*/_jsx(\"ul\",{children:Object.entries(game.playerTimes).map(_ref2=>{let[name,time]=_ref2;return/*#__PURE__*/_jsxs(\"li\",{children:[name,\": \",formatTime(time)]},name);})}),/*#__PURE__*/_jsx(Button,{variant:\"danger\",onClick:()=>handleRemoveGame(index),className:\"rem-btn\",children:\"Remove Game\"})]},index))}),/*#__PURE__*/_jsx(Button,{onClick:goToHome,className:\"mt-3 pg-home-button\",children:\"Home\"})]});}export default PreviousGames;","map":{"version":3,"names":["React","useState","useMemo","useNavigate","Button","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsx","_jsx","jsxs","_jsxs","register","PreviousGames","navigate","savedGames","setSavedGames","JSON","parse","localStorage","getItem","goToHome","formatTime","time","parts","split","handleRemoveGame","index","updatedGames","splice","setItem","stringify","playerTotals","totals","forEach","game","Object","entries","playerTimes","_ref","name","seconds","parseInt","chartData","labels","keys","datasets","label","data","values","backgroundColor","chartOptions","responsive","scales","y","beginAtZero","ticks","color","x","plugins","legend","className","children","options","map","gameName","_ref2","variant","onClick"],"sources":["/Users/rheashah/Documents/IntraTracker/src/PreviousGames.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport './PreviousGames.css';\n\n// Register ChartJS components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction PreviousGames() {\n  const navigate = useNavigate();\n  const [savedGames, setSavedGames] = useState(JSON.parse(localStorage.getItem('savedGames')) || []);\n\n  const goToHome = () => {\n    navigate('/');\n  };\n\n  const formatTime = (time) => {\n    const parts = time.split(':');\n    return parts[1] + ':' + parts[2]; \n  };\n\n  const handleRemoveGame = (index) => {\n    const updatedGames = [...savedGames];\n    updatedGames.splice(index, 1);\n    localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n    setSavedGames(updatedGames); // Update the state to reflect the removed game\n  };\n\n  const playerTotals = useMemo(() => {\n    const totals = {};\n    savedGames.forEach(game => {\n      Object.entries(game.playerTimes).forEach(([name, time]) => {\n        const seconds = parseInt(time.split(':')[1]) * 60 + parseInt(time.split(':')[2]);\n        if (totals[name]) {\n          totals[name] += seconds;\n        } else {\n          totals[name] = seconds;\n        }\n      });\n    });\n    return totals;\n  }, [savedGames]);\n\n  const chartData = {\n    labels: Object.keys(playerTotals),\n    datasets: [{\n      label: 'Total Time (seconds)',\n      data: Object.values(playerTotals),\n      backgroundColor: '#DA7308', // Orange color from CSS\n    }]\n  };\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      y: {\n        beginAtZero: true,\n        ticks: {\n          color: '#666'\n        }\n      },\n      x: {\n        ticks: {\n          color: '#666'\n        }\n      }\n    },\n    plugins: {\n      legend: {\n        labels: {\n          color: '#666'\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"previous-games\">\n      <h1 className=\"page-title\">Previous Games</h1>\n      <Bar data={chartData} options={chartOptions} />\n      <div className=\"games-list\">\n        {savedGames.map((game, index) => (\n          <div key={index} className=\"game-entry\">\n            <h3>{game.gameName}</h3>\n            <ul>\n              {Object.entries(game.playerTimes).map(([name, time]) => (\n                <li key={name}>{name}: {formatTime(time)}</li>\n              ))}\n            </ul>\n            <Button variant=\"danger\" onClick={() => handleRemoveGame(index)} className=\"rem-btn\">Remove Game</Button>\n          </div>\n        ))}\n      </div>\n      <Button onClick={goToHome} className=\"mt-3 pg-home-button\">Home</Button>\n    </div>\n  );\n}\n\nexport default PreviousGames;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}