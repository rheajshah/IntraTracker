{"ast":null,"code":"import React,{useState}from'react';import{useNavigate,useLocation}from'react-router-dom';import{Button,Form}from'react-bootstrap';import Swal from'sweetalert2';import'./PickTeam.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function EditTime(){const navigate=useNavigate();const location=useLocation();const{playerTimes,gameId}=location.state;const[times,setTimes]=useState(playerTimes);const handleTimeChange=(name,newTime)=>{setTimes(prevTimes=>({...prevTimes,[name]:newTime}));};const handleSubmit=async e=>{e.preventDefault();const{value:gameName}=(await Swal.fire({title:'Enter the name of this game',input:'text',inputPlaceholder:'Enter the name of the game',showCancelButton:true,inputValidator:value=>{if(!value){return'You need to write something!';}}}))||{value:\"Unnamed Game\"};// Use \"Unnamed Game\" if no input provided\nlet savedGames=JSON.parse(localStorage.getItem('savedGames'))||[];let gameExists=false;const updatedGames=savedGames.map(game=>{if(game.id===gameId){gameExists=true;return{...game,gameName,playerTimes:times};}return game;});if(!gameExists){updatedGames.push({id:gameId,gameName,playerTimes:times});}localStorage.setItem('savedGames',JSON.stringify(updatedGames));Swal.fire({title:'Success!',text:'Changes saved successfully!',icon:'success',confirmButtonText:'OK'});navigate('/previous-games');};return/*#__PURE__*/_jsxs(\"div\",{className:\"pick-team\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"page-title\",children:\"Edit Player Times\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:handleSubmit,children:[Object.entries(times).map(_ref=>{let[name,time]=_ref;return/*#__PURE__*/_jsxs(Form.Group,{className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Form.Label,{children:[name,\"'s Time:\"]}),/*#__PURE__*/_jsx(Form.Control,{type:\"text\",defaultValue:time,onChange:e=>handleTimeChange(name,e.target.value)})]},name);}),/*#__PURE__*/_jsx(Button,{type:\"submit\",className:\"start-game-btn\",children:\"Save Changes\"})]}),/*#__PURE__*/_jsx(Button,{variant:\"secondary\",className:\"start-game-btn\",onClick:()=>navigate(-1),children:\"Back\"})]});}export default EditTime;","map":{"version":3,"names":["React","useState","useNavigate","useLocation","Button","Form","Swal","jsx","_jsx","jsxs","_jsxs","EditTime","navigate","location","playerTimes","gameId","state","times","setTimes","handleTimeChange","name","newTime","prevTimes","handleSubmit","e","preventDefault","value","gameName","fire","title","input","inputPlaceholder","showCancelButton","inputValidator","savedGames","JSON","parse","localStorage","getItem","gameExists","updatedGames","map","game","id","push","setItem","stringify","text","icon","confirmButtonText","className","children","onSubmit","Object","entries","_ref","time","Group","Label","Control","type","defaultValue","onChange","target","variant","onClick"],"sources":["/Users/rheashah/Documents/IntraTracker/src/EditTime.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { Button, Form } from 'react-bootstrap';\nimport Swal from 'sweetalert2';\nimport './PickTeam.css';\n\nfunction EditTime() {\n    const navigate = useNavigate();\n    const location = useLocation();\n    const { playerTimes, gameId } = location.state;\n    const [times, setTimes] = useState(playerTimes);\n\n    const handleTimeChange = (name, newTime) => {\n        setTimes(prevTimes => ({ ...prevTimes, [name]: newTime }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        const { value: gameName } = await Swal.fire({\n            title: 'Enter the name of this game',\n            input: 'text',\n            inputPlaceholder: 'Enter the name of the game',\n            showCancelButton: true,\n            inputValidator: (value) => {\n                if (!value) {\n                    return 'You need to write something!';\n                }\n            }\n        }) || { value: \"Unnamed Game\" }; // Use \"Unnamed Game\" if no input provided\n\n        let savedGames = JSON.parse(localStorage.getItem('savedGames')) || [];\n        let gameExists = false;\n\n        const updatedGames = savedGames.map(game => {\n            if (game.id === gameId) {\n                gameExists = true;\n                return { ...game, gameName, playerTimes: times };\n            }\n            return game;\n        });\n\n        if (!gameExists) {\n            updatedGames.push({ id: gameId, gameName, playerTimes: times });\n        }\n\n        localStorage.setItem('savedGames', JSON.stringify(updatedGames));\n        Swal.fire({\n            title: 'Success!',\n            text: 'Changes saved successfully!',\n            icon: 'success',\n            confirmButtonText: 'OK'\n        });\n        navigate('/previous-games');\n    };\n\n    return (\n        <div className=\"pick-team\">\n            <h2 className=\"page-title\">Edit Player Times</h2>\n            <Form onSubmit={handleSubmit}>\n                {Object.entries(times).map(([name, time]) => (\n                    <Form.Group key={name} className=\"mb-3\">\n                        <Form.Label>{name}'s Time:</Form.Label>\n                        <Form.Control\n                            type=\"text\"\n                            defaultValue={time}\n                            onChange={(e) => handleTimeChange(name, e.target.value)}\n                        />\n                    </Form.Group>\n                ))}\n                <Button type=\"submit\" className=\"start-game-btn\">\n                    Save Changes\n                </Button>\n            </Form>\n            <Button variant=\"secondary\" className=\"start-game-btn\" onClick={() => navigate(-1)}>\n                Back\n            </Button>\n        </div>\n    );\n}\n\nexport default EditTime;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}